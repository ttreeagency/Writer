prototype(Ttree.Writer:Page) < prototype(Neos.Neos:Page) {
	head.writerBackendHeader = Ttree.Writer:DefaultStylesheets {
		@position = 'after stylesheets'
	}

	bodyTag.attributes.class = 'writer-mode'

	body = Neos.Fusion:Component {
		content = Neos.Fusion:Case {
			customLayout {
				condition = ${WriterLayout.hasLayout(documentNode)}
				renderer = Ttree.Writer:ContentRenderer.CustomLayout
			}

			conventionBasedLayout {
				condition = Ttree.Fusion:CanRender {
					type = ${q(node).property('_nodeType') + '.Writer'}
				}
				type = ${q(node).property('_nodeType') + '.Writer'}
			}

			default {
				condition = true
				renderer = Ttree.Writer:ContentRenderer.DefaultLayout
			}
		}

		renderer = afx`
		<div id="writer-container">
			{props.content}
		</div>
		`
	}
}
